<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - NebulaTextbook</title>
    <script type="importmap"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/NebulaTextbook.styles.css" asp-append-version="true" />
</head>
<body data-theme="light">
    <header class="header">
        <nav class="navbar navbar-expand-lg">
            <div class="container-fluid">
                <!-- Project Logo Image here -->
                <div class="navbar-logo">
                    <a href="../"><img src="~/images/learning_link_text_logo.png" alt="Learning Link Logo" /></a>
                </div>
                @* <div class="navbar-name"> *@
                @*     <span class="navbar-title">Learning Link</span> *@
                @* </div> *@
                

                <!-- Navbar Links -->
                <div class="d-flex">
                    <a class="btn custom-nav-btn mx-2" href="#">Dashboard [PH]</a>
                    <a class="btn custom-nav-btn mx-2" href="#">Course List [PH]</a>
                    <a class="btn custom-nav-btn mx-2" href="#">Calendar [PH]</a>
                </div>
                
                <!-- Theme Toggle -->
                <div class="ms-auto">
                    <div id="theme-toggle" class="theme-toggle">
                        <div class="theme-slider">
                            <i id="theme-sun" class="bi bi-sun"></i>
                            <i id="theme-moon" class="bi bi-moon"></i>
                        </div>
                    </div>
                </div>

                <!-- Profile Picture -->
                <div class="profile-picture">
                    <i class="bi bi-person"></i>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="footer">
        <div class="container d-flex justify-content-between align-items-center">
            <img src="~/images/learning_link_brand.png" alt="Learning Link Logo" class="footer-logo"/>
            <div class="footer-links">
                <a asp-page="/Policy/privacy" class="footer-link ">Privacy Policy</a>
                <a asp-page="/Policy/cookies" class="footer-link">Cookie Notice</a>
                <a asp-page="/Policy/use_policy" class="footer-link">Acceptable Use Policy</a>
            </div>
        </div>
    </footer>


    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <!-- Light/Dark Toggle -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const themeToggle = document.getElementById("theme-toggle");
            const body = document.body;

            // If user data found in localStorage, use that setting
            // Otherwise, default to light mode
            const savedTheme = localStorage.getItem("theme") || "light";
            body.setAttribute("data-theme", savedTheme);

            // Toggle control
            themeToggle.addEventListener("click", function () {
                const currentTheme = body.getAttribute("data-theme");
                const newTheme = currentTheme === "light" ? "dark" : "light";
                body.setAttribute("data-theme", newTheme);
                localStorage.setItem("theme", newTheme);

                // swaps mode of the toggle indicator and icons
                const themeSlider = document.querySelector(".theme-slider");
                themeSlider.classList.toggle("active", newTheme === "dark");
            });
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
